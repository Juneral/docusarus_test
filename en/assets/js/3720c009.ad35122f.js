"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[13751],{28211:(e,t,a)=>{a.r(t),a.d(t,{default:()=>u});var l=a(27378),n=a(38944),r=a(95096),c=a(14460),s=a(89583),o=a(24138),i=a(7711),m=a(10057);function u({tags:e}){const t=(0,r.M)();return l.createElement(c.FG,{className:(0,n.Z)(s.k.wrapper.docsPages,s.k.page.docsTagsListPage)},l.createElement(c.d,{title:t}),l.createElement(m.Z,{tag:"doc_tags_list"}),l.createElement(o.Z,null,l.createElement("div",{className:"container margin-vert--lg"},l.createElement("div",{className:"row"},l.createElement("main",{className:"col col--8 col--offset-2"},l.createElement("h1",null,t),l.createElement(i.Z,{tags:e}))))))}},52977:(e,t,a)=>{a.d(t,{Z:()=>i});var l=a(27378),n=a(38944),r=a(13415);const c="tag_Nd8t",s="tagRegular_TiLs",o="tagWithCount_AQg7";function i({permalink:e,label:t,count:a}){return l.createElement(r.Z,{href:e,className:(0,n.Z)(c,a?o:s)},t,a&&l.createElement("span",null,a))}},7711:(e,t,a)=>{a.d(t,{Z:()=>i});var l=a(27378),n=a(95096),r=a(52977);const c="tag_SyQ5";function s(){return s=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var a=arguments[t];for(var l in a)Object.prototype.hasOwnProperty.call(a,l)&&(e[l]=a[l])}return e},s.apply(this,arguments)}function o({letterEntry:e}){return l.createElement("article",null,l.createElement("h2",null,e.letter),l.createElement("ul",{className:"padding--none"},e.tags.map((e=>l.createElement("li",{key:e.permalink,className:c},l.createElement(r.Z,s({},e)))))),l.createElement("hr",null))}function i({tags:e}){const t=(0,n.P)(e);return l.createElement("section",{className:"margin-vert--lg"},t.map((e=>l.createElement(o,{key:e.letter,letterEntry:e}))))}},95096:(e,t,a)=>{a.d(t,{M:()=>c,P:()=>s});var l,n,r=a(36712);const c=()=>(0,r.I)({id:"theme.tags.tagsPageTitle",message:"Tags",description:"The title of the tag list page"});function s(e){const t={};return Object.values(e).forEach((e=>{const a=function(e){return e[0].toUpperCase()}(e.label);var r;null!==(r=(l=t)[n=a])&&void 0!==r||(l[n]=[]),t[a].push(e)})),Object.entries(t).sort((([e],[t])=>e.localeCompare(t))).map((([e,t])=>({letter:e,tags:t.sort(((e,t)=>e.label.localeCompare(t.label)))})))}}}]);